import React from 'react'
import { useState } from 'react'
import emailjs from '@emailjs/browser'
import { motion } from 'framer-motion'
import Head from 'next/head'

const Contact: React.FC = () => {
  const [status, setStatus] = useState('')

  const sendEmail = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault()

    // Almacena una referencia al formulario
    const form = e.currentTarget

    // FormData tipado
    const formData = new FormData(form)

    // Aseguramos que TypeScript reconozca los valores obtenidos de FormData
    const name = formData.get('name') as string | null
    const email = formData.get('email') as string | null
    const options = formData.getAll('options[]') as string[]
    const message = formData.get('message') as string | null

    // Convertir las opciones seleccionadas en un formato adecuado para enviar por email
    const optionsString = options.join(', ') // Une las opciones seleccionadas en una cadena de texto

    console.log('Nombre:', name)
    console.log('Email:', email)
    console.log('Intereses seleccionados:', optionsString) // Esto debería mostrar las opciones seleccionadas
    console.log('Mensaje:', message)

    emailjs
      .sendForm(
        'service_d07lmdb', // Reemplaza con tu Service ID
        'template_sqnnim3', // Reemplaza con tu Template ID
        form, // Usamos el formulario completo
        '9Nhr0oYcdiIcOpF6M' // Reemplaza con tu User ID
      )
      .then(
        result => {
          console.log(result.text)
          setStatus('¡Mensaje enviado exitosamente!')
          form.reset() // Usa la referencia almacenada para resetear el formulario
        },
        error => {
          console.error(error.text)
          setStatus('Hubo un error al enviar el mensaje.')
        }
      )
  }

  return (
    <>
      <Head>
        <title>Contacto</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <section className='relative w-full px-5 py-28 xl:py-56'>
        <div className='relative mx-auto my-1 max-w-[100rem]'>
          <div className='hero-inner relative w-full py-28 xl:py-56'>
            <div className='bg-animation'></div>
            <div className='hero_text-container mx-auto max-w-[100rem]'>
              <div className='text-container_box scroll-reveal-loading'>
                <h3 className='text-center text-sm xl:text-xl'>Contacto</h3>
                <h1 className='heading-hero mx-auto text-center'>
                  <span>¿Tienes un proyecto en mente? Háblame de el</span>
                </h1>
              </div>
            </div>
          </div>
          {/* <h2 className="heading mb-6 text-gray-800">
          ¿Tienes un proyecto en mente? Háblame de el
        </h2> */}
          <motion.div
            initial={{ opacity: 0, y: '50px' }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 1, ease: 'linear' }}
          >
            <form id='contact-form' className='space-y-4' onSubmit={sendEmail}>
              <div className='flex flex-col flex-wrap justify-between gap-8 md:flex-row'>
                <div className='grow'>
                  <label
                    htmlFor='name'
                    className='block pb-4 pt-6 text-sm xl:text-xl'
                  >
                    Nombre
                  </label>
                  <input
                    type='text'
                    id='name'
                    name='name'
                    required
                    className='w-full rounded border border-zinc-800 bg-transparent px-4 py-7 focus:outline-none focus:ring-2 focus:ring-blue-500'
                  />
                </div>
                <div className='grow'>
                  <label
                    htmlFor='email'
                    className='block pb-4 pt-6 text-sm xl:text-xl'
                  >
                    Email
                  </label>
                  <input
                    type='email'
                    id='email'
                    name='email'
                    required
                    className='w-full rounded border border-zinc-800 bg-transparent px-4 py-7 focus:outline-none focus:ring-2 focus:ring-blue-500'
                  />
                </div>
              </div>
              <div>
                <label className='block pb-4 pt-6 text-sm xl:text-xl'>
                  Estoy interesado en los servicios de:
                </label>
                <div className='flex flex-row flex-wrap justify-between gap-4'>
                  {[
                    'Diseño Web',
                    'E-Commerce Diseño Web',
                    'Branding',
                    'Diseño Gráfico',
                    'Consultoría',
                    'Otros'
                  ].map((option, index) => (
                    <div
                      key={index}
                      className='flex flex-row items-center justify-center gap-4'
                    >
                      <input
                        type='checkbox'
                        id={`checkbox-${index}`}
                        name='options[]' // Importante, asegúrate de que sea "options[]"
                        value={option}
                        className='h-8 w-8 appearance-none rounded-xl border-2 border-gray-500 checked:border-black checked:bg-black'
                      />
                      <label
                        htmlFor={`checkbox-${index}`}
                        className='block py-4 text-sm xl:text-xl'
                      >
                        {option}
                      </label>
                      <input
                        type='hidden'
                        name='selectedOptions'
                        value={option}
                      />
                    </div>
                  ))}
                </div>
              </div>

              <div className='w-full grow'>
                <label
                  htmlFor='message'
                  className='block pb-4 pt-6 text-sm xl:text-xl'
                >
                  Cuéntame sobre el proyecto que tienes en mente
                </label>
                <textarea
                  id='message'
                  name='message'
                  //rows="4"
                  required
                  className='w-full rounded border border-zinc-800 bg-transparent px-4 py-7 focus:outline-none focus:ring-2 focus:ring-blue-500'
                ></textarea>
              </div>

              <div className='flex justify-end'>
                <button
                  type='submit'
                  className='w-40 rounded-[50vw] border-2 border-black bg-black px-[1.4rem] py-[0.65rem] font-medium text-white transition duration-300 hover:bg-button-gradient hover:text-black'
                >
                  Enviar
                </button>
              </div>
            </form>
            {status && (
              <p className='mt-4 text-center text-gray-700'>{status}</p>
            )}
          </motion.div>
        </div>
      </section>
    </>
  )
}

export default Contact
